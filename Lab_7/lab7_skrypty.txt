#########################################################Lab_7 (11. https://en.wikipedia.org/wiki/Supercomputer)
ANALIZA EMOCJI
install.packages("tm")
install.packages("SnowballC")
install.packages("wordcloud")
install.packages("RColorBrewer")
install.packages("syuzhet")
install.packages("ggplot2")
library("tm")
library("SnowballC")
library("wordcloud")
library("RColorBrewer")
library("syuzhet")
library("ggplot2")
text <- readLines("b_g.txt", warn=FALSE)
TextDoc <- Corpus(VectorSource(text))
toSpace <- content_transformer(function(x, pattern) gsub(pattern, " ", x))
TextDoc <- tm_map(TextDoc, toSpace, "/")
TextDoc <- tm_map(TextDoc, toSpace, "@")
TextDoc <- tm_map(TextDoc, toSpace, "\\|")
TextDoc <- tm_map(TextDoc, toSpace, ":")
TextDoc <- tm_map(TextDoc, toSpace, ";")
TextDoc <- tm_map(TextDoc, toSpace, ",")
TextDoc <- tm_map(TextDoc, toSpace, "/")
TextDoc <- tm_map(TextDoc, removeNumbers)
TextDoc <- tm_map(TextDoc, removeWords, stopwords("english"))
TextDoc <- tm_map(TextDoc, removeWords, c("[", "]"))
TextDoc <- tm_map(TextDoc, removePunctuation)
TextDoc <- tm_map(TextDoc, stripWhitespace)
TextDoc <- tm_map(TextDoc, stemDocument)
TextDoc <- tm_map(TextDoc, content_transformer(tolower))
TextDoc_dtm <- TermDocumentMatrix(TextDoc)
dtm_m <- as.matrix(TextDoc_dtm)
dtm_v <- sort(rowSums(dtm_m), decreasing = TRUE)
dtm_d <- data.frame(word = names(dtm_v), freq = dtm_v)
head(dtm_d, 5)

barplot(
  dtm_d[1:25, ]$freq,
  las = 3,
  names.arg = dtm_d[1:25, ]$word,
  col = "blue",
  main = "Najczesciej uzywane slowa",
  ylab = "Czestotliwosc slow"
)

set.seed(1234)

wordcloud(
  words = dtm_d$word,
  freq = dtm_d$freq,
  scale = c(10, 0.5),
  min.freq = 1,
  max.words = 125,
  random.order = FALSE,
  rot.per = 0.50,
  colors = brewer.pal(7, "Accent")
)

findAssocs(
  TextDoc_dtm, 
  terms = c("learn", "system", "model"),
  corlimit = 0.5
)

findAssocs(
  TextDoc_dtm, 
  terms = findFreqTerms(TextDoc_dtm, lowfreq = 25),
  corlimit = 0.5
)

syuzhet_vector <- get_sentiment(text, method = "syuzhet")
bing_vector <- get_sentiment(text, method = "bing")
nrc_vector <- get_sentiment(text, method = "nrc")

rbind(
  sign(head(syuzhet_vector)),
  sign(head(bing_vector)),
  sign(head(nrc_vector))
)

d <- get_nrc_sentiment(as.vector(dtm_d$word))
head(d,10)
td <- data.frame(t(d))
td_new <- data.frame(rowSums(td[1:100]))
names(td_new)[1] <- "count"
td_new <- cbind("sentiment" = rownames(td_new), td_new)
rownames(td_new) <- NULL
td_new2 <- td_new[1:8,]

quickplot(
  sentiment,
  data = td_new2,
  weight = count,
  geom = "bar",
  fill = sentiment,
  ylab = "count"
) + ggtitle("jakie nastroje")

barplot(
  sort(colSums(prop.table(d[, 1:8]))),
  horiz = TRUE,
  cex.names = 0.7,
  las = 1,
  main = "Emocje w tekscie",
  xlab = "Procenty"
)

#GRAFY POWIĄZAŃ
install.packages("tidytext")
install.packages("igraph")
install.packages("ggraph")
library("tidytext")
library("igraph")
library("ggraph")
library(dplyr)
library(tidyr)
text <- readChar("b_g.txt", file.info("b_g.txt")$size)

text_df <- data.frame(
  line = 1, 
  text = text)

text_df

tidy_text <- text_df %>%
  unnest_tokens(word, text)

data(stop_words)
de <- data.frame("thy", "OLD_WORDS")
names(de) <- c("word", "lexicon")
stop_words <- rbind(stop_words, de)
de <- data.frame("1", "OLD_WORDS")
names(de) <- c("word", "lexicon")
de <- data.frame("hath", "OLD_WORDS")
names(de) <- c("word", "lexicon")
de <- data.frame("mar'd", "OLD_WORDS")
names(de) <- c("word", "lexicon")
stop_words <- rbind(stop_words, de)

tidy_text <- tidy_text %>%
  anti_join(stop_words)

tidy_text %>%
  count(word, sort = TRUE)

text_bigrams <- text_df %>%
  unnest_tokens(
    bigram, 
    text, 
    token = "ngrams", 
    n = 5)

text_bigrams

text_bigrams %>%
  count(bigram, sort = TRUE)

bigrams_separated <- text_bigrams %>% separate(bigram, c("word1", "word2","word3"), sep = " ")

bigrams_filtered <- bigrams_separated %>%
  filter(!word1 %in% stop_words$word) %>%
  filter(!word2 %in% stop_words$word) %>%
  filter(!word3 %in% stop_words$word)

bigrams_counts <- bigrams_filtered %>%
  count(word1, word2, word3, sort = TRUE)

bigrams_united <- bigrams_filtered %>%
  unite(bigram, word1, word2, word3, sep = " ")

bigram_graph <- bigrams_counts %>%
    filter(word1 == "aircraft" | word2 == "aircraft" | word3 == "aircraft") %>%
    graph_from_data_frame()

bigram_graph1 <- bigrams_counts %>%
    filter(word1 == "boeing" | word2 == "boeing" | word3 == "boeing") %>%
    graph_from_data_frame()

bigram_graph2 <- bigrams_counts %>%
    filter(word1 == "wing" | word2 == "wing" | word3 == "wing") %>%
    graph_from_data_frame()

ggraph(bigram_graph, layout = "fr") +
  geom_edge_link(aes(edge_alpha = n), show.legend = TRUE, arrow = NULL, end_cap = circle(.07, "inches")) +
  geom_node_point(color = "lightblue", size = 5) + 
  geom_node_text(aes(label = name), position = "identity") + 
  theme_void()

ggraph(bigram_graph1, layout = "fr") + 
  geom_edge_link(aes(edge_alpha = n), show.legend = TRUE, arrow = NULL, end_cap = circle(.07, "inches")) +
  geom_node_point(color = "lightgreen", size = 5) + 
  geom_node_text(aes(label = name), position = "identity") + 
  theme_void()

ggraph(bigram_graph2, layout = "fr") + 
  geom_edge_link(aes(edge_alpha = n), show.legend = TRUE, arrow = NULL, end_cap = circle(.07, "inches")) +
  geom_node_point(color = "purple", size = 5) + 
  geom_node_text(aes(label = name), position = "identity") + 
  theme_void()

bigram_graphA <- bigrams_counts %>%
    filter(word1 %in% c("boeing", "aircraft") | word2 %in% c("boeing", "aircraft") | word3 %in% c("boeing", "aircraft"))

bigram_graphB <- bigrams_counts %>%
  filter(word1 %in% bigram_graphA$word1 | word1 %in% bigram_graphA$word2 | word1 %in% bigram_graphA$word3 |
           word2 %in% bigram_graphA$word1 | word2 %in% bigram_graphA$word2 | word2 %in% bigram_graphA$word3 |
           word3 %in% bigram_graphA$word1 | word3 %in% bigram_graphA$word2 | word3 %in% bigram_graphA$word3)

bigram_graphC <- bigrams_counts %>%
  filter(word1 %in% bigram_graphB$word1 | word1 %in% bigram_graphB$word2 | word1 %in% bigram_graphB$word3 |
           word2 %in% bigram_graphB$word1 | word2 %in% bigram_graphB$word2 | word2 %in% bigram_graphB$word3 |
           word3 %in% bigram_graphB$word1 | word3 %in% bigram_graphB$word2 | word3 %in% bigram_graphB$word3)

bigram_graphD <- bigrams_counts %>%
  filter(word1 %in% bigram_graphC$word1 | word1 %in% bigram_graphC$word2 | word1 %in% bigram_graphC$word3 |
           word2 %in% bigram_graphC$word1 | word2 %in% bigram_graphC$word2 | word2 %in% bigram_graphC$word3 |
           word3 %in% bigram_graphC$word1 | word3 %in% bigram_graphC$word2 | word3 %in% bigram_graphC$word3)

set.seed(2023)
a <- grid::arrow(type = "closed", length = unit(.18, "inches"))

ggraph(bigram_graphA %>% graph_from_data_frame(), layout = "fr") +
  geom_edge_link(aes(edge_alpha = n), show.legend = TRUE, arrow = a, end_cap = circle(.05, "inches")) +
  geom_node_point(color = "lightblue", size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()

ggraph(bigram_graphB %>% graph_from_data_frame(), layout = "fr") +
  geom_edge_link(aes(edge_alpha = n), show.legend = TRUE, arrow = a, end_cap = circle(.05, "inches")) +
  geom_node_point(color = "lightgreen", size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()

ggraph(bigram_graphC %>% graph_from_data_frame(), layout = "fr") +
  geom_edge_link(aes(edge_alpha = n + 5), show.legend = TRUE, arrow = a, end_cap = circle(.05, "inches")) +
  geom_node_point(color = "purple", size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()

ggraph(bigram_graphD %>% graph_from_data_frame(), layout = "fr") +
  geom_edge_link(aes(edge_alpha = n + 5), show.legend = TRUE, arrow = a, end_cap = circle(.05, "inches")) +
  geom_node_point(color = "red", size = 5) +
  geom_node_text(aes(label = name), vjust = 1, hjust = 1) +
  theme_void()
